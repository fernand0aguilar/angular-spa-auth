{"version":3,"sources":["./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/shared/global.variables.ts","./src/app/model/character.model.ts","./src/app/model/comic.model.ts","./src/environments/environment.ts","./src/app/components/comic-detail/comic-detail.component.html","./src/app/components/comic-detail/comic-detail.component.ts","./src/app/model/creator.model.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.component.ts","./src/app/service/status.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/sign-up/sign-up.component.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/user.model.ts","./src/app/components/favorites/favorites.component.ts","./src/app/components/favorites/favorites.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/service/data-storage.service.ts","./src/app/service/comic.service.ts","./src/app/auth/helpers/must-match.validator.ts","./src/app/shared/loader/loader.component.ts","./src/app/shared/loader/loader.component.html","./src/app/components/comics/comics.component.html","./src/app/components/comics/comics.component.ts","./src/app/auth/auth.service.ts","./src/app/components/comic-list/comic-list.component.html","./src/app/components/comic-list/comic-list.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<header>\n  <a class=\"marvel\" routerLink=\"comics\"><span>Marvel</span></a>\n  <p class=\"marvel-side\"><span>Comics</span></p>\n  <nav class=\"navbar\">\n    <div class=\"navbar-nav\">\n      <div></div>\n      <ul class=\"nav-links\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"comics\" routerLinkActive=\"active\">Comics</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"favorites\" routerLinkActive=\"active\" *ngIf=\"isAuthenticated\">Favorites</a>\n        </li>\n      </ul>\n\n      <div class=\"auth\">\n        <div *ngIf=\"!isAuthenticated;else logout\" class=\"btn-group\">\n          <a class=\"nav-item nav-link\" routerLink=\"login\" routerLinkActive=\"active\" >Login</a><span>|</span>\n          <a class=\"nav-item nav-link\" routerLink=\"signup\" routerLinkActive=\"active\" >Sign Up</a>\n        </div>\n        <ng-template #logout>\n          <a class=\"nav-item nav-link\" (click)=\"onLogout()\">Logout</a>\n        </ng-template>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { GlobalConstants } from '../../shared/global.variables';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  marvel: string;\n  isAuthenticated = false;\n  private userSubscription: Subscription;\n\n  constructor(private globals: GlobalConstants, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.marvel = this.globals.MARVEL_URL;\n\n    this.userSubscription = this.authService.user.subscribe(user => {\n      this.isAuthenticated = !!user;\n      console.log(\"Authenticated: \", this.isAuthenticated, !!user);\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy(): void {\n    this.userSubscription.unsubscribe();\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class GlobalConstants {\n  public readonly MARVEL_URL: string = \"https://www.marvel.com/\";\n  public readonly MARVEL_DEVELOPER_URL: string = \"https://developer.marvel.com/\";\n  public readonly MARVEL_ABOUT_URL: string = \"https://www.marvel.com/corporate/about\";\n\n  public readonly GOOGLE_SIGNUP_URL: string = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n  public readonly GOOGLE_VERIFY_URL: string = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\n\n  public readonly FIREBASE_DATABASE_URL: string = 'https://angular-spa-marvel-default-rtdb.firebaseio.com/';\n\n  public readonly BREAKPOINT_TABLET: number = 900;\n  public readonly BREAKPOINT_MOBILE: number = 520;\n\n  public readonly API_REQUEST_LIMIT = 40; // max 100\n}\n","// reference: https://developer.marvel.com/documentation/entity_types\nexport class Character {\n  id: number;           // The unique ID of the character resource.\n  name:\tstring;         // The name of the character.\n  description: string;  // A short bio or description of the character.\n  resourceURI: string;  // The canonical URL identifier for this resource.\n  thumbnail: string;    // The representative image for this character.\n\n  constructor(id: number, name: string, resourceURI: string, description: string, thumbnail: string) {\n    this.id = id;\n    this.name = name;\n    this.resourceURI = resourceURI;\n    this.description = description;\n    this.thumbnail = thumbnail;\n  }\n\n}\n","import { Creator } from \"./creator.model\";\nimport { Character } from \"./character.model\";\n\nexport class Comic {\n  id: number;\n  digitalId: number;\n\n  title: string;\n  description: string;\n\n  isbn: string;\n  issn: string;\n  upc: string;\n  diamondCode: string;\n\n  pageCount: number;\n\n  printPrice: number;\n  digitalPurchasePrice: number;\n\n  saleDate: Date;\n  focDate: Date;\n\n  issuePreviewText: string;\n\n  thumbnailURI: string;\n\n  resourceURI: string;\n  marvelDetailLink: string;\n\n  creators: Creator[];\n  characters: Character[];\n\n  constructor(id: number, digitalId: number, title: string, description: string,\n  isbn: string, issn: string, upc: string, diamondCode: string,\n  pageCount: number, printPrice: number, digitalPurchasePrice: number,\n  saleDate: Date, focDate: Date,\n  issuePreviewText: string, resourceURI: string, thumbnailURI: string, marvelDetailLink: string,\n  creators: Creator[], characters: Character[]) {\n    this.id = id;\n    this.digitalId = digitalId;\n    this.title = title;\n    this.description = description;\n    this.isbn = isbn;\n    this.issn = issn;\n    this.upc = upc;\n    this.diamondCode = diamondCode;\n    this.pageCount = pageCount;\n    this.printPrice = printPrice;\n    this.digitalPurchasePrice = digitalPurchasePrice;\n    this.saleDate = saleDate;\n    this.focDate = focDate;\n    this.issuePreviewText = issuePreviewText;\n    this.resourceURI = resourceURI;\n    this.thumbnailURI = thumbnailURI;\n    this.marvelDetailLink = marvelDetailLink;\n    this.creators = creators;\n    this.characters = characters;\n  }\n\n}\n","export const environment = {\n  production: false,\n  MARVEL_BASE_URL: \"https://gateway.marvel.com\",\n  MARVEL_API_PUBLIC_KEY: \"961ed5491a9fc99083c8cc3033feecbd\",\n  MARVEL_API_PRIVATE_KEY: \"01731978868fa44628260bfe672dcc809846a537\",\n  GOOGLE_API_KEY: \"AIzaSyDmTJRXzY-tTlJR7dwxjx7aZrcIKBB89mM\"\n};\n","<div class=\"comic-detail-container\" *ngIf=\"comic\">\n  <div class=\"bg-image\" [style.background-image]=\"backgroundImage\"></div>\n\n  <div class=\"comic-details\">\n    <div class=\"main-content card-style\">\n      <button class=\"btn btn-fav\" (click)=\"favorComic()\" [disabled]=\"!user\" [ngClass]=\"(isFavorite ? 'favored' : '')\">❤️ {{ (!isFavorite ? 'I LIKE THIS' : 'DISLIKE') }}</button>\n      <div class=\"inner-container\">\n        <figure class=\"thumbnail\">\n          <img src=\"{{ comic.thumbnailURI }}\" alt=\"Cover of {{ comic.title }}\">\n        </figure>\n        <div class=\"details\">\n          <h1><a [href]=\"comic.marvelDetailLink\" target=\"_blank\">{{comic.title}}</a></h1>\n\n          <sub><span>ID {{comic.id}}</span> <span *ngIf=\"comic.digitalId\">| DIGITAL ID {{comic.digitalId}}</span></sub>\n\n          <p *ngIf=\"(comic.description != '') || (comic.description != null) || (comic.description != undefined)\"\n              class=\"section description\">\n            {{comic.description}}\n          </p>\n\n          <div class=\"section published\">\n            <h4>Published:</h4> <p>{{comic.saleDate | date:'longDate' }}</p>\n          </div>\n\n          <div class=\"section creators\" *ngIf=\"comic.creators\">\n            <h4>Praise those incredible creators:</h4>\n            <div class=\"creators-container\">\n              <div class=\"creator\" *ngFor=\"let type of creatorsMap | keyvalue\">\n                <h5>{{type.key | uppercase}}</h5>\n                <p>{{type.value.join(', ')}}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"more-details card-style\">\n      <h4>Further information</h4>\n      <div class=\"general-infos\">\n        <div class=\"col\">\n          <p *ngIf=\"comic.focDate\"><span>FOC-Date:</span>{{comic.focDate | date:'longDate'}}</p>\n          <p *ngIf=\"comic.pageCount\"><span>Pages:</span>{{comic.pageCount}}</p>\n          <p *ngIf=\"comic.printPrice\"><span>Price (print):</span>{{comic.printPrice | currency}}</p>\n          <p *ngIf=\"comic.digitalPurchasePrice\"><span>Price (digital):</span>{{comic.digitalPurchasePrice}}</p>\n        </div>\n        <div class=\"col\">\n          <p *ngIf=\"comic.isbn\"><span>ISBN:</span>{{comic.isbn}}</p>\n          <p *ngIf=\"comic.issn\"><span>ISSN:</span>{{comic.issn}}</p>\n          <p *ngIf=\"comic.upc\"><span>UPC:</span>{{comic.upc}}</p>\n          <p *ngIf=\"comic.diamondCode\"><span>Diamond Code:</span>{{comic.diamondCode}}</p>\n        </div>\n      </div>\n\n      <a *ngIf=\"comic.marvelDetailLink\"\n          class=\"btn btn-classic\"\n          type=\"button\"\n          [href]=\"comic.marvelDetailLink\" target=\"_blank\">{{ \"View on Marvel.com\" | uppercase }}</a>\n    </div>\n    <div class=\"characters card-style\" *ngIf=\"comic.characters && comic.characters.length > 0\">\n      <h4>Characters of this comic</h4>\n      <div class=\"inner-container\">\n        <figure class=\"character\" *ngFor=\"let character of comic.characters\">\n          <img src=\"{{ character.thumbnail }}\" alt=\"Image of {{ character.name }}\">\n          <h5>{{ character.name }}</h5>\n        </figure>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { StatusService } from 'src/app/service/status.service';\nimport { Comic } from 'src/app/model/comic.model';\nimport { Subscription } from 'rxjs';\nimport { last } from 'rxjs/operators';\nimport { ComicService } from 'src/app/service/comic.service';\nimport { DataStorageService } from 'src/app/service/data-storage.service';\nimport { Router } from '@angular/router';\nimport { Creator } from 'src/app/model/creator.model';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { User } from 'src/app/model/user.model';\nimport { ComicsComponent } from '../comics/comics.component';\n\n@Component({\n  selector: 'app-comic-detail',\n  templateUrl: './comic-detail.component.html',\n  styleUrls: ['./comic-detail.component.scss']\n})\nexport class ComicDetailComponent implements OnInit, OnDestroy {\n  comic: Comic;\n  comicSubscription: Subscription;\n  userSubscription: Subscription;\n  user: User;\n  backgroundImage: string;\n\n  writers: string = \"\";\n  pencillers: string = \"\";\n  converArtists: string = \"\";\n\n  isFavorite: boolean = false;\n\n  creatorsMap: Map<string, string[]> = new Map<string, string[]>();\n\n  constructor(private statusService: StatusService, private comicService: ComicService,\n              private dataService: DataStorageService, private router: Router,\n              private authSerice: AuthService) { }\n\n  ngOnInit(): void {\n    this.userSubscription = this.authSerice.user.subscribe(user => {\n      this.user = user\n    });\n\n    this.comicSubscription = this.statusService.getSelectedComic().subscribe((comic: Comic) => {\n      if (comic.characters.length === 0) {\n        this.dataService.getCharactersByComicId(comic.id);\n      }\n\n      this.comic = comic;\n      this.backgroundImage = 'url(' + this.comic.thumbnailURI + ')';\n\n      this.isFavorite = this.comicService.isFavoriteComic(this.comic.id);\n      this.creatorsToMap(comic.creators);\n    });\n\n    if (this.comic === undefined) {\n      this.router.navigate([\"comics\"]);\n    }\n  }\n\n  creatorsToMap(creators: Creator[]) {\n   this.creatorsMap.clear();\n    for (const creator of creators) {\n      if (!this.creatorsMap.has(creator.type)) {\n        this.creatorsMap.set(creator.type, []);\n      }\n      this.creatorsMap.get(creator.type).push(creator.name);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.comicSubscription.unsubscribe();\n    this.userSubscription.unsubscribe();\n  }\n\n  favorComic() {\n    if (!this.isFavorite) {\n      this.comicService.addFavorite(this.comic);\n      this.isFavorite = true;\n    } else {\n      this.comicService.removeFavorite(this.comic);\n      this.isFavorite = false;\n    }\n\n    this.comicService.getFavoritesSubject().subscribe(favorites => {\n      this.dataService.storeFavoritesOfUser(favorites, this.user);\n    }).unsubscribe();\n  }\n\n}\n","export class Creator {\n  name: string;\n  type: string;\n\n  constructor(name: string, type: string) {\n    this.name = name;\n    this.type = type;\n  }\n}\n","<div class=\"container\">\n  <div class=\"auth-card\">\n\n    <app-login *ngIf=\"isLoginMode;else signup\"></app-login>\n    <ng-template #signup>\n      <app-sign-up></app-sign-up>\n    </ng-template>\n\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  isLoginMode = true;\n  userSubscribtion: Subscription;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    if(this.router.url.includes(\"login\")) {\n      this.isLoginMode = true;\n    } else if(this.router.url.includes(\"signup\")) {\n      this.isLoginMode = false;\n    } else {\n      this.router.navigate(['home']);\n    }\n\n    this.userSubscribtion = this.authService.user.subscribe(user => {\n      console.log(\"user: \", user)\n      // this.router.navigate(['favorites'])\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSubscribtion.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport { Comic } from '../model/comic.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n\n  private searchField = new BehaviorSubject<string>('');\n  private yearSelected = new BehaviorSubject<number>(2021);\n  private selectedComic = new BehaviorSubject<Comic>(null);\n  private displayedComicList = new BehaviorSubject<Comic[]>([]);\n  private isLoadingComics = new BehaviorSubject<boolean>(false);\n\n  getSelectedComic(): BehaviorSubject<Comic> {\n    return this.selectedComic;\n  }\n\n  getSearchField(): BehaviorSubject<string> {\n    return this.searchField;\n  }\n\n  getSelectedYear(): BehaviorSubject<number> {\n    return this.yearSelected;\n  }\n\n  getDisplayedComicList(): BehaviorSubject<Comic[]> {\n    return this.displayedComicList;\n  }\n\n  getLoadingStatus(): BehaviorSubject<boolean> {\n    return this.isLoadingComics;\n  }\n\n  constructor() { }\n\n  resetYearStatus(year: number) {\n    console.warn(\"== StatusService: resetYearStatus\");\n    this.yearSelected.next(year);\n  }\n  resetSearchStatus(searchField: string) {\n    console.warn(\"== StatusService: resetSearchStatus\");\n    this.searchField.next(searchField);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../../shared/global.variables';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  marvel: string;\n\n  constructor(private globals: GlobalConstants) { }\n\n  ngOnInit(): void {\n    this.marvel = this.globals.MARVEL_URL;\n  }\n\n}\n","\n<footer>\n  <div class=\"copyright\">\n    <a class=\"marvel\" routerLink=\"comics\"><span>Marvel</span></a>\n    <a [href]=\"marvel\" target=\"_blank\" rel=\"marvel.com\">Data provided by Marvel. © 2021 MARVEL</a>\n  </div>\n</footer>\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  UrlTree\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap, take } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    router: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Promise<boolean | UrlTree>\n    | Observable<boolean | UrlTree> {\n    return this.authService.user.pipe(\n      take(1),\n      map(user => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n      // tap(isAuth => {\n      //   if (!isAuth) {\n      //     this.router.navigate(['/auth']);\n      //   }\n      // })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService, AuthResponseData } from '../auth.service';\n\nimport { MustMatch } from '../helpers/must-match.validator';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  isLoading: boolean = false;\n  error: string = null;\n\n  signupForm: FormGroup;\n  submitted: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  get f() { return this.signupForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      this.isLoading = true;\n      const email = this.signupForm.value.email;\n      const password = this.signupForm.value.password;\n\n      let authObs: Observable<AuthResponseData>;\n      authObs = this.authService.signup(email, password);\n\n      authObs.subscribe(\n        resData => {\n          this.isLoading = false;\n          this.router.navigate(['favorites']);\n        },\n        errorMessage => {\n          console.log(errorMessage);\n          this.error = errorMessage;\n          this.isLoading = false;\n        }\n      );\n\n      this.signupForm.reset();\n    }\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['login']);\n  }\n\n}\n","\n<div *ngIf=\"isLoading; Else notLoading\">\n  <app-loader></app-loader>\n</div>\n\n<ng-template #notLoading>\n  <div class=\"form-container\">\n    <h2>Sign up with a new account</h2>\n\n    <div class=\"error-msg\" *ngIf=\"error\">\n      {{ error }}\n    </div>\n\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label>Email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Enter a valid Email-adress.</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label>Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must contain at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"form-group col\">\n                <label>Confirm Password</label>\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                    <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"btn-group text-center\">\n            <button class=\"btn btn-primary mr-1\">Register</button>\n            <button class=\"btn btn-secondary\" (click)=\"onSwitchMode()\" type=\"reset\">Sign In</button>\n        </div>\n    </form>\n  </div>\n\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport { DataStorageService } from 'src/app/service/data-storage.service'\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'angular-spa-auth';\n\n  constructor(private authService: AuthService, private dataService: DataStorageService) { }\n\n  ngOnInit(): void {\n    this.authService.autoLogin();\n\n    this.authService.user.subscribe(user => {\n      if (user != null) {\n        this.dataService.getFavoritesOfUser(user);\n      }\n    })\n  }\n}\n","<div id=\"page-container\">\n  <div id=\"content-wrap\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n\n\n","export class User {\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Comic } from 'src/app/model/comic.model';\nimport { User } from 'src/app/model/user.model';\nimport { ComicService } from 'src/app/service/comic.service';\nimport { DataStorageService } from 'src/app/service/data-storage.service';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit, OnDestroy {\n  user: User = null;\n  userSubscription: Subscription;\n  favoriteSubscription: Subscription;\n\n  comics: Comic[] = [];\n\n  constructor(private authService: AuthService,\n    private comicService: ComicService) { }\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.user.subscribe(user => {\n      this.user = user;\n    });\n\n    this.favoriteSubscription = this.comicService.getFavoritesSubject().subscribe(favs => {\n      this.comics = favs;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.userSubscription.unsubscribe();\n    this.favoriteSubscription.unsubscribe();\n  }\n}\n","<div class=\"container\">\n  <div class=\"intro\">\n    <h2>Your favorite comics.</h2>\n  </div>\n\n  <app-comic-list [comicList]=\"comics\" [listType]=\"'favorites'\"></app-comic-list>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ComicListComponent } from './components/comic-list/comic-list.component';\nimport { ComicDetailComponent } from './components/comic-detail/comic-detail.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { GlobalConstants } from './shared/global.variables';\nimport { LoaderComponent } from './shared/loader/loader.component';\nimport { ComicsComponent } from './components/comics/comics.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    ComicListComponent,\n    ComicDetailComponent,\n    FavoritesComponent,\n    LoaderComponent,\n    ComicsComponent,\n    AuthComponent,\n    LoginComponent,\n    SignUpComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [GlobalConstants],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService, AuthResponseData } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isLoading: boolean = false;\n  error: string = null;\n\n  loginForm: FormGroup;\n  submitted: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n\n      let authObs: Observable<AuthResponseData>;\n\n      this.isLoading = true;\n      authObs = this.authService.login(email, password);\n\n      authObs.subscribe(\n        resData => {\n          this.isLoading = false;\n          this.router.navigate(['favorites']);\n        },\n        errorMessage => {\n          console.log(errorMessage);\n          this.error = errorMessage;\n          this.isLoading = false;\n        }\n      );\n\n      this.loginForm.reset();\n    }\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['signup']);\n  }\n}\n","<div *ngIf=\"isLoading; Else notLoading\">\n  <app-loader></app-loader>\n</div>\n\n<ng-template #notLoading>\n    <div class=\"form-container\">\n    <h2>Sign in with an existing user</h2>\n\n    <div class=\"error-msg\" *ngIf=\"error\">\n      {{ error }}\n    </div>\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label>Email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label>Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"btn-group text-center\">\n            <button class=\"btn btn-primary mr-1\">Login</button>\n            <button class=\"btn btn-secondary\" (click)=\"onSwitchMode()\" type=\"reset\">Sign Up</button>\n        </div>\n    </form>\n  </div>\n</ng-template>\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StatusService } from './status.service';\n\nimport {Md5} from 'ts-md5/dist/md5';\nimport { ComicService } from './comic.service';\nimport { Comic } from '../model/comic.model';\nimport { Creator } from '../model/creator.model';\nimport { Character } from '../model/character.model';\nimport { GlobalConstants } from '../shared/global.variables';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n  timestamp:string = \"0\";\n\n  constructor(private http: HttpClient, private statusService: StatusService,\n  private comicService: ComicService, private globals: GlobalConstants, private authService: AuthService) { }\n\n  getComics(title: string, year: number, page: number, offset: number) {\n    console.info(`[INFO] Get comics for year=${year}, page=${page} with offset ${offset}, query by title=${title}`)\n    const ENDPOINT = \"/v1/public/comics\";\n\n    const params = new Map<string, string>();\n      params.set(\"limit\", this.globals.API_REQUEST_LIMIT.toString());\n      params.set(\"offset\", offset.toString());\n      params.set(\"format\", \"comic\");\n      params.set(\"formatType\", \"comic\");\n      params.set(\"noVariants\", \"true\");\n      params.set(\"dateRange\", `${year}-01-01,${year}-12-31`);\n      params.set(\"orderBy\", \"title\");\n      if(title !== '')\n        params.set(\"titleStartsWith\", title);\n\n    this.statusService.getLoadingStatus().next(true);\n    this.http.get<any>(`${environment.MARVEL_BASE_URL + ENDPOINT}`, this.setRequestOptions(params)).toPromise()\n    .then((response) => {\n      console.info(\"[INFO] Success in getComics\", response);\n      this.processResponseData(response.data.results, response.data.total, page);\n      this.statusService.getLoadingStatus().next(false);\n    }).catch((error) => {\n      console.error(\"Error occured in getComics.\", error);\n      this.statusService.getLoadingStatus().next(false);\n    });\n  }\n\n  getCharactersByComicId(id: number) {\n    // /v1/public/comics/{comicId}/characters\n    const ENDPOINT = `/v1/public/comics/${id}/characters`;\n\n    this.http.get<any>(`${environment.MARVEL_BASE_URL + ENDPOINT}`, this.setRequestOptions()).toPromise()\n      .then((response) => {\n        console.log(\"Success in fetchCharactersByComicId\", response);\n        const resCharacters = response.data.results;\n        const characters: Character[] = [];\n\n        for (const character of resCharacters) {\n          let thumbnail = character.thumbnail.path + \"/portrait_uncanny.\" + character.thumbnail.extension;\n          characters.push(new Character(character.id, character.name, character.resourceURI, character.description, thumbnail));\n        }\n\n        this.comicService.addCharactersToComic(id, characters);\n      }).catch((error) => {\n        console.error(\"Error occured in fetchCharactersByComicId.\", error);\n      });\n  }\n\n  setRequestOptions(additionalParams: Map<string, string> = new Map<string, string>()) {\n    this.timestamp = Date.now().toString();\n\n    const headers = new HttpHeaders({\n        \"Accept\": \"application/json\",\n        });\n\n    let params = new HttpParams()\n        .set(\"apikey\", environment.MARVEL_API_PUBLIC_KEY)\n        .set(\"ts\", this.timestamp)\n        .set(\"hash\", this.getMd5Hash());\n    \n    for (const [key, value] of additionalParams) {\n      params = params.set(key, value);\n    }\n\n    return { headers: headers, params: params };\n  }\n  \n  // md5(timestamp + private_key + public_key)\n  getMd5Hash(): string {\n    const md5 = new Md5();\n    const hash = md5\n          .appendStr(this.timestamp)\n          .appendStr(environment.MARVEL_API_PRIVATE_KEY)\n          .appendStr(environment.MARVEL_API_PUBLIC_KEY)\n          .end().toString();\n\n    // console.log(\"MD5 Hash: \", hash);\n    return hash;\n  }\n\n  processResponseData(responseComics: any, totalComics: number, page: number) {\n    const comics: Comic[] = [];\n    for (const comic of responseComics) {\n      let printPrice = 0;\n      let digitialPrice = 0;\n      let saleDate: Date = null;\n      let focDate: Date = null;\n      let issuePreviewText = \"\";\n      let detailLink = \"\";\n      let thumbnail = comic.thumbnail.path + \"/portrait_uncanny.\" + comic.thumbnail.extension;\n      let creators: Creator[] = [];\n      let characters: Character[] = [];\n\n      for (const price of comic.prices) {\n        if (price.type === \"printPrice\") printPrice = price.price;\n        if (price.type === \"digitalPurchasePrice\") digitialPrice = price.price;\n      }\n\n      for (const date of comic.dates) {\n        if (date.type === \"onsaleDate\") saleDate = new Date(date.date);\n        if (date.type === \"focDate\") focDate = new Date(date.date);\n      }\n\n      for (const textObj of comic.textObjects) {\n        if (textObj.type === \"issue_preview_text\") issuePreviewText = textObj.text;\n      }\n\n      for (const url of comic.urls) {\n        if (url.type === \"detail\") detailLink = url.url;\n      }\n\n      for (const creator of comic.creators.items) {\n        creators.push(new Creator(creator.name, creator.role));\n      }\n\n      comics.push(\n        new Comic(+comic.id, +comic.digitalId,\n        comic.title, ((comic.description != null) ? comic.description : \"\"),\n        comic.isbn, comic.issn, comic.upc, comic.diamondCode, +comic.pageCount,\n        printPrice, digitialPrice, saleDate, focDate, issuePreviewText,\n        comic.resourceURI, thumbnail, detailLink, creators, characters)\n      );\n    }\n\n    // console.info(\"[INFO] New comics: \", comics);\n    this.comicService.addComics(comics, totalComics, page);\n  }\n\n  getFavoritesOfUser(user: User) {\n    const url = this.globals.FIREBASE_DATABASE_URL + user.id + '.json';\n\n    this.http.get<Comic[]>(url).subscribe(comics => {\n      if (comics != null) {\n        const favs: Comic[] = [];\n\n        for (const comic of comics) {\n          const creators:Creator[] = [];\n          const characters:Character[] = [];\n\n          if (comic.creators) {\n            for (const creator of comic.creators) {\n              creators.push(new Creator(creator.name, creator.type));\n            }\n          }\n\n          if (comic.characters) {\n            for (const character of comic.characters) {\n              characters.push(new Character(\n                character.id, character.name,\n                character.resourceURI,\n                character.description, character.thumbnail\n              ));\n            }\n          }\n\n          const fav = new Comic(\n            comic.id, comic.digitalId, comic.title, comic.description,\n            comic.isbn, comic.issn, comic.upc, comic.diamondCode,\n            comic.pageCount, comic.printPrice, comic.digitalPurchasePrice,\n            comic.saleDate, comic.focDate, comic.issuePreviewText,\n            comic.resourceURI, comic.thumbnailURI, comic.marvelDetailLink,\n            creators, characters\n          );\n\n          favs.push(fav);\n        }\n        this.comicService.addFavorites(favs);\n      }\n    });\n  }\n\n  storeFavoritesOfUser(comics: Comic[], user: User) {\n    const url = this.globals.FIREBASE_DATABASE_URL + user.id + '.json';\n\n    this.http\n      .put(url, comics)\n      .subscribe(response => {\n        console.log(response);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Comic } from '../model/comic.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Character } from '../model/character.model';\nimport { GlobalConstants } from '../shared/global.variables';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComicService {\n  comicPageMapSubject = new BehaviorSubject<Map<number, Comic[]>>(new Map<number, Comic[]>());\n  private comicsSubject = new BehaviorSubject<Comic[]>([]);\n  private favoritesSubject = new BehaviorSubject<Comic[]>([]);\n\n  private comics: Comic[] = [];\n  private comicPageMap: Map<number, Comic[]> = new Map<number, Comic[]>();\n  private favorites: Comic[] = [];\n\n  constructor(private globals: GlobalConstants) { }\n\n  addComics(comics: Comic[], totalComics: number, page: number) {\n    this.comics = this.comics.concat(comics);\n    this.comicsSubject.next(this.comics.slice());\n    this.addToComicPageMap(comics, totalComics, page);\n  }\n\n  addToComicPageMap(comics: Comic[], totalComics: number, page: number) {\n    if (this.comicPageMap.size === 0) {\n      const pages = Math.ceil(totalComics / this.globals.API_REQUEST_LIMIT);\n      for (let i = 1; i <= pages; i++) {\n        (i == page) ? this.comicPageMap.set(i, comics) : this.comicPageMap.set(i, []);\n      }\n    } else {\n      this.comicPageMap.set(page, comics)\n    }\n\n    this.comicPageMapSubject.next(this.comicPageMap);\n  }\n\n  addCharactersToComic(id: number, characters: Character[]) {\n    this.comics.find((comic) => {\n      if (comic.id === id) {\n        comic.characters = characters;\n        this.comicsSubject.next(this.comics.slice());\n      }\n    })\n  }\n\n  isFavoriteComic(id: number): boolean {\n    return (this.favorites.find(comic => (comic.id === id)) !== undefined);\n  }\n\n  getComics(): Comic[] {\n    return this.comics.slice();\n  }\n\n  getComicsSubject(): BehaviorSubject<Comic[]> {\n    return this.comicsSubject;\n  }\n\n  getComicPageMap(): BehaviorSubject<Map<number, Comic[]>> {\n    return this.comicPageMapSubject;\n  }\n\n  addFavorite(comic: Comic) {\n    this.favorites.push(comic);\n    this.favoritesSubject.next(this.favorites.slice());\n    console.info(\"Favorite added: \", comic, this.favorites);\n  }\n\n  removeFavorite(fav: Comic) {\n    this.favorites = this.favorites.filter(comic => comic.id !== fav.id);\n    this.favoritesSubject.next(this.favorites.slice());\n    console.info(\"Favorite removed: \", this.favorites);\n  }\n\n  addFavorites(comics: Comic[]) {\n    this.favorites = comics;\n    this.favoritesSubject.next(this.favorites.slice());\n    console.info(\"Favorites: \", this.favorites);\n  }\n\n  getFavorites(): Comic[] {\n    return this.favorites.slice();\n  }\n\n  getFavoritesSubject(): BehaviorSubject<Comic[]> {\n    return this.favoritesSubject;\n  }\n\n  resetComics() {\n    this.comics.length = 0;\n    this.comicsSubject.next(this.comics.slice());\n    this.comicPageMap = new Map<number, Comic[]>();\n    this.comicPageMapSubject.next(this.comicPageMap);\n  }\n\n  resetFavorites() {\n    this.favorites.length = 0;\n    this.favoritesSubject.next(this.favorites.slice());\n  }\n}\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"box\">\n  <div class=\"loader\">\n    <div class=\"inner one\"></div>\n    <div class=\"inner two\"></div>\n    <div class=\"inner three\"></div>\n  </div>\n</div>\n","<div class=\"container\">\n  <div class=\"intro\">\n    <h2>Filters</h2>\n    <div class=\"filter-container\">\n      <select name=\"year\" [(ngModel)]=\"selectedYear\" (change)=\"changeYear($event.target.value)\">\n        <option value=\"{{year}}\" *ngFor=\"let year of yearOptions\"\n          [attr.selected]=\"selectedYear == year\">{{year}}</option>\n      </select>\n      \n      <input placeholder=\"search for comics by name or characters\"\n      name=\"searchField\" [(ngModel)]=\"searchField\" (change)=\"changeSearchField($event.target.value)\"/>\n      \n      <div class=\"btn-group page-select\">\n        <span>Pages:</span>\n        <button *ngFor=\"let page of comicPageMap | keyvalue\"\n          [ngClass]=\"{'selected-page': selectedPage == page.key}\"\n          class=\"page-btn\" type=\"button\" [value]=\"page.key\"\n          (click)=\"changePage(page.key)\">{{page.key}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-comic-list *ngIf=\"!isLoading;else loading\" listType=\"full\"></app-comic-list>\n\n\n<ng-template #loading>\n  <app-loader></app-loader>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DataStorageService } from 'src/app/service/data-storage.service';\nimport { StatusService } from 'src/app/service/status.service';\nimport { Subscription } from 'rxjs';\nimport { last } from 'rxjs/operators';\nimport { ComicService } from '../../service/comic.service';\nimport { Comic } from '../../model/comic.model';\nimport { GlobalConstants } from '../../shared/global.variables';\n\n@Component({\n  selector: 'app-comics',\n  templateUrl: './comics.component.html',\n  styleUrls: ['./comics.component.scss']\n})\nexport class ComicsComponent implements OnInit, OnDestroy {\n  startYear:number = 1949;\n  endYear:number = 2021;\n  yearOptions: number[] = [];\n\n  selectedYear: number = 0;\n  selectedPage: number = 1;\n  isLoading: boolean = false;\n  existingPages: number = 0;\n  searchField: string = '';\n\n\n  comicPageMap: Map<number, Comic[]> = null;\n\n  comicPageMapSubscription: Subscription;\n  yearSubscription: Subscription;\n  searchSubscription: Subscription;\n  loadingSubscription: Subscription;\n\n  constructor(private dataService: DataStorageService,\n              private statusService: StatusService,\n              private comicService: ComicService,\n              private globals: GlobalConstants) { }\n\n  ngOnInit(): void {\n    for(let i = this.endYear; i >= this.startYear; i--) {\n      this.yearOptions.push(i)\n    }\n\n    this.comicPageMapSubscription = this.comicService.getComicPageMap().subscribe((comicMap) => {\n      console.log(\"Comic Map: \", comicMap)\n      if (comicMap != null) {\n        this.comicPageMap = comicMap;\n        this.statusService.getDisplayedComicList().next(comicMap.get(this.selectedPage));\n      }\n    });\n\n    this.yearSubscription = this.statusService.getSelectedYear().subscribe((year) => {\n      this.selectedYear = year;\n      this.selectedPage = 1;\n      if (this.comicPageMap == null || this.comicPageMap.size === 0) {\n        this.dataService.getComics(this.searchField, year, 1, 0); // first page, offset 0 -> new year = new comics\n      }\n    });\n\n    this.searchSubscription = this.statusService.getSearchField().subscribe((search) => {\n      this.searchField = search;\n      this.selectedPage = 1;\n      if (this.comicPageMap == null || this.comicPageMap.size === 0) {\n        this.dataService.getComics(search, this.selectedYear, 1, 0); // first page, offset 0 -> new year = new comics\n      }\n    });\n\n    this.loadingSubscription = this.statusService.getLoadingStatus().subscribe((loadingState) => {\n      this.isLoading = loadingState;\n      console.log(\"loading state: \", this.isLoading)\n    });\n  }\n\n  changeYear(year: number) {\n    this.comicService.resetComics();\n    this.statusService.resetYearStatus(this.selectedYear);\n  }\n\n  changeSearchField(searchField: string) {\n    this.comicService.resetComics();\n    this.statusService.resetSearchStatus(this.searchField);\n  }\n\n  changePage(page: number) {\n    console.info(`[INFO] Page changed from ${this.selectedPage} to ${page}.`)\n    this.selectedPage = page;\n\n    if (this.comicPageMap.get(page).length === 0) {\n      this.dataService.getComics(this.searchField, this.selectedYear, page, this.globals.API_REQUEST_LIMIT * (page - 1));\n    } else {\n      this.statusService.getDisplayedComicList().next(this.comicPageMap.get(page));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.searchSubscription.unsubscribe();\n    this.yearSubscription.unsubscribe();\n    this.loadingSubscription.unsubscribe();\n    this.comicPageMapSubscription.unsubscribe();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\n\nimport { User } from '../model/user.model';\nimport { GlobalConstants } from '../shared/global.variables';\nimport { environment } from '../../environments/environment';\nimport { ComicService } from '../service/comic.service';\nimport { DataStorageService } from '../service/data-storage.service';\n\nexport interface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  public user = new BehaviorSubject<User>(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router,\n  private globals: GlobalConstants, private comicService: ComicService) {}\n\n  signup(email: string, password: string) {\n    console.table(this.globals);\n    const url = this.globals.GOOGLE_SIGNUP_URL + environment.GOOGLE_API_KEY;\n\n    const payload = {\n        email: email,\n        password: password,\n        returnSecureToken: true\n    };\n\n    console.info(\"POST | SIGN UP URL: \" + url, payload);\n\n    return this.http\n      .post<AuthResponseData>(url, payload)\n      .pipe(\n        catchError(this.handleError),\n        tap(resData => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<AuthResponseData>(\n        this.globals.GOOGLE_VERIFY_URL + environment.GOOGLE_API_KEY,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap(resData => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      _tokenExpirationDate: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration =\n        new Date(userData._tokenExpirationDate).getTime() -\n        new Date().getTime();\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/auth']);\n    localStorage.removeItem('userData');\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n\n    this.comicService.resetFavorites();\n  }\n\n  autoLogout(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  private handleAuthentication(\n    email: string,\n    userId: string,\n    token: string,\n    expiresIn: number\n  ) {\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(email, userId, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n  private handleError(errorRes: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred!';\n    if (!errorRes.error || !errorRes.error.error) {\n      return throwError(errorMessage);\n    }\n    switch (errorRes.error.error.message) {\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This email exists already';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = 'This email does not exist.';\n        break;\n      case 'INVALID_PASSWORD':\n        errorMessage = 'This password is not correct.';\n        break;\n      case 'PASSWORDS_NOT_MATCHING':\n        errorMessage = 'Your password must match with the retyped password.'\n        break;\n    }\n    return throwError(errorMessage);\n  }\n}\n","\n<div *ngIf=\"comicList.length > 0;else noComics\" class=\"comic-list cards\">\n\n  <a class=\"comic-item\" (click)=\"selectComic(comic)\" *ngFor=\"let comic of comicList\">\n    <figure class=\"card\">\n      <img src=\"{{ comic.thumbnailURI }}\" alt=\"Cover of {{ comic.title }}\">\n      <figcaption>{{ comic.title }}</figcaption>\n      <figcaption *ngIf=\"validateId(comic)\" class=\"faved\" >🌟</figcaption>\n    </figure>\n  </a>\n\n</div>\n\n<ng-template #noComics>\n  <div>\n    <h1>Sorry, no comics available</h1>\n  </div>\n</ng-template>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\n\nimport { ComicService } from '../../service/comic.service';\nimport { DataStorageService } from 'src/app/service/data-storage.service';\nimport { StatusService } from 'src/app/service/status.service';\nimport { Subscription } from 'rxjs';\nimport { Comic } from 'src/app/model/comic.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-comic-list',\n  templateUrl: './comic-list.component.html',\n  styleUrls: ['./comic-list.component.scss']\n})\nexport class ComicListComponent implements OnInit, OnDestroy {\n  @Input() listType: string;\n  @Input() comicList: Comic[];\n  @Input() favoriteComics: Comic[]\n\n  displayedComicsSubscription: Subscription;\n  favoriteSubscription: Subscription;\n\n  constructor(private statusService: StatusService,\n    private comicService: ComicService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    switch (this.listType) {\n      case \"full\":\n        this.displayedComicsSubscription = this.statusService.getDisplayedComicList().subscribe((comics: Comic[] = []) => {\n          this.comicList = comics;\n        });\n        this.favoriteSubscription = this.comicService.getFavoritesSubject().subscribe(favs => {\n          this.favoriteComics = favs;\n        });\n        break;\n\n      case \"favorites\":\n        break;\n    }\n  }\n\n  selectComic(comic: Comic) {\n    this.statusService.getSelectedComic().next(comic);\n    this.router.navigate(['comics', 'comic', comic.id]);\n  }\n\n  validateId(comic: Comic) {\n    return this.favoriteComics.find(x => x.id === comic.id);\n  }\n\n  \n\n  ngOnDestroy(): void {\n    if (this.displayedComicsSubscription) {\n      this.displayedComicsSubscription.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ComicDetailComponent } from './components/comic-detail/comic-detail.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { ComicsComponent } from './components/comics/comics.component';\nimport { ComicListComponent } from './components/comic-list/comic-list.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/comics', pathMatch: 'full' },\n  { path: 'comics', children: [\n    { path: '', component: ComicsComponent },\n    { path: 'comic/:id', component: ComicDetailComponent }\n  ]},\n  { path: 'favorites', component: FavoritesComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: AuthComponent },\n  { path: 'signup', component: AuthComponent },\n  { path: '**', redirectTo: '/comics' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}